<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
    xsi:schemaLocation="
    	http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://cxf.apache.org/jaxrs
		http://cxf.apache.org/schemas/jaxrs.xsd">
        
	
	<!--引用jdbc.properties-->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!--托管dataSource,给sessionFactory使用-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="driverClass" value="${driverClass}"></property>
			<property name="jdbcUrl" value="${jdbcUrl}"></property>
			<property name="user" value="${user}"></property>
			<property name="password" value="${password}"></property>
	</bean>
	
	<!-- spring整合JPA -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--
			#########################################################
			指定JPA扫描的实体类所在的包
			#########################################################
		-->
		<property name="packagesToScan" value="com.robin.bos.domain" />
		<!-- 指定持久层提供者为Hibernate -->
		<property name="persistenceProvider">
			<bean class="org.hibernate.ejb.HibernatePersistence" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!-- 自动建表 -->
				<property name="generateDdl" value="true" />
				<property name="database" value="ORACLE" />
				<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>

	
	
	<!--托管transactionManager,服务于Spring的事务功能(在代码里面程序员不会自己创建,这个让Spring自己创建,程序员负责指定需要开启事务的方法)-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	
	<!--
		#########################################################
		开启IOC注解.
		指定Spring进行扫描的包，如果该包中的类使用了@Component @Controller@Service等注解，会把这些类注册为bean
		！！！！不要扫描DAO ！！！！
		DAO包下的类要使用Spring Data JPA框架进行扫描
		#########################################################
	-->
	<context:component-scan base-package="com.robin.bos.service,com.robin.bos.web" />
	
	
	<!--开启事务开关-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!--
		#########################################################
		指定Spring Data JPA要进行扫描的包,该包中的类框架会自动为其创建代理
		#########################################################
	-->
	<jpa:repositories base-package="com.robin.bos.dao"/>
	
	<bean id="serviceBean" class="com.robin.bos.service.take_delivery.impl.OrderServiceImpl"></bean>
	<jaxrs:server address="/orderService">
			<jaxrs:serviceBeans>
				<ref bean="serviceBean" />
			</jaxrs:serviceBeans>
	
			<jaxrs:inInterceptors>
				<bean class="org.apache.cxf.interceptor.LoggingInInterceptor"></bean>
			</jaxrs:inInterceptors>
			<!--
				拦截响应信息,非必须
				设置后,可以在控制台观察到响应信息
			-->
			<jaxrs:outInterceptors>
				<bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"></bean>
			</jaxrs:outInterceptors>
		</jaxrs:server>
	
	
	
        
</beans>